{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Newli\\\\Desktop\\\\HealthCareProject\\\\health-care-application\\\\src\\\\components\\\\reset-password\\\\reset-password.js\";\nimport React, { Component } from 'react';\nimport '../verify-identity/verify-identity.css';\nimport '../validation/validation';\nimport { Container, Form, Button, Col, FormControl, ButtonToolbar } from \"react-bootstrap\";\nimport Popup from \"../popup/popup\";\nconst validationRules = {\n  required: val => val !== null && val !== undefined && val !== \"\",\n  passNew: passNew => {\n    const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n    return re.test(String(passNew));\n  },\n  passCheck: passCheck => {\n    const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n    return re.test(String(passCheck)); //const re = /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/;\n    //return re.test(String(email).toLowerCase());\n  }\n};\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFieldChange = e => {\n      let newState = { ...this.state\n      };\n      newState[e.target.name].value = e.target.value;\n      this.validateForm(newState);\n    };\n\n    this.handleSetTouched = e => {\n      let field = { ...this.state[e.target.name],\n        isTouched: true\n      };\n      this.setState({\n        [e.target.name]: { ...field\n        }\n      });\n    };\n\n    this.getClassName = fieldName => {\n      const field = this.state[fieldName];\n      return field.isTouched && !field.isValid ? \"has-error\" : \"\";\n    };\n\n    this.validateForm = newState => {\n      newState = newState || { ...this.state\n      };\n      this.fields.forEach(fieldName => {\n        let newField = newState[fieldName];\n        newField.errors = [];\n        newField.isValid = true;\n        this.formValidationRules[fieldName].forEach(vRule => {\n          if (!vRule.rule(this.state[fieldName].value)) {\n            newField.errors.push(vRule.message);\n            newField.isValid = false;\n          }\n\n          newState[fieldName] = newField;\n        });\n      });\n      this.setState(newState);\n    };\n\n    this.formValidationRules = {\n      passNew: [{\n        rule: validationRules.passNew,\n        message: \"Pass number is invalid\"\n      }],\n      passCheck: [{\n        rule: validationRules.required,\n        message: \"passCheck is required\"\n      }, {\n        rule: validationRules.passCheck,\n        message: \"passCheck is invalid\"\n      }],\n      password_has_error: [false]\n    };\n    this.fields = [\"passNew\", \"passCheck\"];\n    this.state = {\n      signupForm: {\n        isValid: false\n      },\n      passNew: {\n        value: \"\",\n        isTouched: false,\n        isValid: false,\n        errors: []\n      },\n      passCheck: {\n        value: \"\",\n        isTouched: false,\n        isValid: false,\n        errors: []\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.validateForm();\n  }\n\n  render() {\n    const {\n      passNew,\n      passCheck\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      // <Container>\n      //   <br />\n      //   <br />\n      //   <br />\n      //   <br />\n      //   <br />\n      //   <Col></Col>\n      //   <Col>\n      //     <h1 className=\"titel\">ตั้งค่ารหัสผ่านใหม่</h1>\n      //     <Form>\n      //       <Form.Label >รหัสผ่านใหม่</Form.Label>\n      //       <FormControl\n      //         className={passNew.isTouched && !passNew.isValid ? \"has-error\" : \"\"}\n      //         type=\"text\"\n      //         name=\"passNew\"\n      //         value={this.state.passNew.value}\n      //         onChange={this.handleFieldChange}\n      //         onBlur={this.handleSetTouched} \n      //       ></FormControl>\n      //       {passNew.isTouched &&\n      //         passNew.errors.length > 0 &&\n      //         passNew.errors.map((err, i) => (\n      //           <span key={i} className=\"error-message\">\n      //             {err}\n      //           </span>\n      //         ))}\n      //       <br />\n      //       <Form.Label>ยืนยันรหัสผ่าน</Form.Label>\n      //       <Form.Control className={passCheck.isTouched && !passCheck.isValid ? \"has-error\" : \"\"}\n      //         type=\"password\"\n      //         name=\"passCheck\"\n      //         value={this.state.passCheck.value}\n      //         checked={this.state.passCheck.checkPassword}\n      //         onChange={this.handleFieldChange}\n      //         onBlur={this.handleSetTouched}\n      //       ></Form.Control>\n      //       {passCheck.isTouched &&\n      //         passCheck.errors.length > 0 &&\n      //         passCheck.errors.map((err, i) => (\n      //           <span key={i} className=\"error-message\">\n      //             {err}\n      //           </span>\n      //         ))}\n      //       <br />\n      //       <ButtonToolbar>\n      //         <Button\n      //           onClick={() => this.props.history.push(\"/login\")}\n      //           size=\"lg\"\n      //           className=\"bt-verify mx-auto d-block\"\n      //           variant=\"secondary\"\n      //         >\n      //           ยกเลิก\n      //         </Button>\n      //         <Button size=\"lg\" className=\"bt-verify mx-auto d-block\"\n      //         >\n      //           ยืนยัน\n      //         </Button>\n      //       </ButtonToolbar>\n      //     </Form>\n      //   </Col>\n      //   <Col></Col>\n      // </Container>\n      React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"titel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }, \"\\u0E15\\u0E31\\u0E49\\u0E07\\u0E04\\u0E48\\u0E32\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\\u0E43\\u0E2B\\u0E21\\u0E48\"), /*#__PURE__*/React.createElement(Form, {\n        className: \"form-verify mx-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\\u0E43\\u0E2B\\u0E21\\u0E48\"), /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        minLength: \"13\",\n        maxLength: \"13\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }, \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.props.history.push(\"/\"),\n        size: \"lg\",\n        className: \"bt-verify mx-auto d-block\",\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, \"\\u0E22\\u0E01\\u0E40\\u0E25\\u0E34\\u0E01\"), /*#__PURE__*/React.createElement(Button // onClick={()=>setModalShow(true)}\n      , {\n        onClick: () => this.setState({\n          modalShow: true\n        }),\n        size: \"lg\",\n        className: \"bt-verify mx-auto d-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\")))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Popup, {\n        show: this.state.modalShow,\n        onHide: () => this.setState({\n          modalShow: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }\n      }))\n    );\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/Newli/Desktop/HealthCareProject/health-care-application/src/components/reset-password/reset-password.js"],"names":["React","Component","Container","Form","Button","Col","FormControl","ButtonToolbar","Popup","validationRules","required","val","undefined","passNew","re","test","String","passCheck","ResetPassword","constructor","props","handleFieldChange","e","newState","state","target","name","value","validateForm","handleSetTouched","field","isTouched","setState","getClassName","fieldName","isValid","fields","forEach","newField","errors","formValidationRules","vRule","rule","push","message","password_has_error","signupForm","componentWillMount","render","history","modalShow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../verify-identity/verify-identity.css'\r\nimport '../validation/validation'\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  FormControl,\r\n  ButtonToolbar,\r\n} from \"react-bootstrap\";\r\nimport Popup from \"../popup/popup\";\r\n\r\nconst validationRules = {\r\n  required: val => val !== null && val !== undefined && val !== \"\",\r\n  passNew: passNew => {\r\n    const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\r\n    return re.test(String(passNew));\r\n  },\r\n  passCheck: passCheck => {\r\n    const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\r\n    return re.test(String(passCheck));\r\n    //const re = /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/;\r\n    //return re.test(String(email).toLowerCase());\r\n  }\r\n};\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.formValidationRules = {\r\n      passNew: [\r\n        { rule: validationRules.passNew, message: \"Pass number is invalid\" }\r\n      ],\r\n      passCheck: [\r\n        { rule: validationRules.required, message: \"passCheck is required\" },\r\n        { rule: validationRules.passCheck, message: \"passCheck is invalid\" }\r\n      ],\r\n      password_has_error: [false]\r\n    };\r\n\r\n    this.fields = [\"passNew\", \"passCheck\"];\r\n\r\n    this.state = {\r\n      signupForm: { isValid: false },\r\n      passNew: { value: \"\", isTouched: false, isValid: false, errors: [] },\r\n      passCheck: { value: \"\", isTouched: false, isValid: false, errors: [] }\r\n    };\r\n  }\r\n\r\n  handleFieldChange = e => {\r\n    let newState = { ...this.state };\r\n    newState[e.target.name].value = e.target.value;\r\n    this.validateForm(newState);\r\n  };\r\n\r\n  handleSetTouched = e => {\r\n    let field = { ...this.state[e.target.name], isTouched: true };\r\n    this.setState({ [e.target.name]: { ...field } });\r\n  };\r\n\r\n  getClassName = fieldName => {\r\n    const field = this.state[fieldName];\r\n    return field.isTouched && !field.isValid ? \"has-error\" : \"\";\r\n  };\r\n\r\n  validateForm = newState => {\r\n    newState = newState || { ...this.state };\r\n    this.fields.forEach(fieldName => {\r\n      let newField = newState[fieldName];\r\n      newField.errors = [];\r\n      newField.isValid = true;\r\n      this.formValidationRules[fieldName].forEach(vRule => {\r\n        if (!vRule.rule(this.state[fieldName].value)) {\r\n          newField.errors.push(vRule.message);\r\n          newField.isValid = false;\r\n        }\r\n        newState[fieldName] = newField;\r\n      });\r\n    });\r\n    this.setState(newState);\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.validateForm();\r\n  }\r\n  render() {\r\n    const { passNew, passCheck } = this.state;\r\n    return (\r\n      // <Container>\r\n      //   <br />\r\n      //   <br />\r\n      //   <br />\r\n      //   <br />\r\n      //   <br />\r\n      //   <Col></Col>\r\n      //   <Col>\r\n      //     <h1 className=\"titel\">ตั้งค่ารหัสผ่านใหม่</h1>\r\n\r\n      //     <Form>\r\n      //       <Form.Label >รหัสผ่านใหม่</Form.Label>\r\n      //       <FormControl\r\n      //         className={passNew.isTouched && !passNew.isValid ? \"has-error\" : \"\"}\r\n      //         type=\"text\"\r\n      //         name=\"passNew\"\r\n      //         value={this.state.passNew.value}\r\n      //         onChange={this.handleFieldChange}\r\n      //         onBlur={this.handleSetTouched} \r\n      //       ></FormControl>\r\n      //       {passNew.isTouched &&\r\n      //         passNew.errors.length > 0 &&\r\n      //         passNew.errors.map((err, i) => (\r\n      //           <span key={i} className=\"error-message\">\r\n      //             {err}\r\n      //           </span>\r\n      //         ))}\r\n\r\n      //       <br />\r\n      //       <Form.Label>ยืนยันรหัสผ่าน</Form.Label>\r\n      //       <Form.Control className={passCheck.isTouched && !passCheck.isValid ? \"has-error\" : \"\"}\r\n      //         type=\"password\"\r\n      //         name=\"passCheck\"\r\n      //         value={this.state.passCheck.value}\r\n      //         checked={this.state.passCheck.checkPassword}\r\n      //         onChange={this.handleFieldChange}\r\n      //         onBlur={this.handleSetTouched}\r\n      //       ></Form.Control>\r\n      //       {passCheck.isTouched &&\r\n      //         passCheck.errors.length > 0 &&\r\n      //         passCheck.errors.map((err, i) => (\r\n      //           <span key={i} className=\"error-message\">\r\n      //             {err}\r\n      //           </span>\r\n      //         ))}\r\n      //       <br />\r\n      //       <ButtonToolbar>\r\n      //         <Button\r\n      //           onClick={() => this.props.history.push(\"/login\")}\r\n      //           size=\"lg\"\r\n      //           className=\"bt-verify mx-auto d-block\"\r\n      //           variant=\"secondary\"\r\n      //         >\r\n      //           ยกเลิก\r\n      //         </Button>\r\n      //         <Button size=\"lg\" className=\"bt-verify mx-auto d-block\"\r\n\r\n      //         >\r\n      //           ยืนยัน\r\n      //         </Button>\r\n      //       </ButtonToolbar>\r\n      //     </Form>\r\n      //   </Col>\r\n      //   <Col></Col>\r\n      // </Container>\r\n\r\n      <Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Col></Col>\r\n      <Col>\r\n        <h1 className=\"titel\">ตั้งค่ารหัสผ่านใหม่</h1>\r\n        <Form className=\"form-verify mx-auto\">\r\n          <Form.Label>รหัสผ่านใหม่</Form.Label>\r\n          <FormControl\r\n            type=\"text\"\r\n            minLength=\"13\"\r\n            maxLength=\"13\"\r\n            required\r\n          ></FormControl>\r\n          <br />\r\n          <Form.Label>ยืนยันรหัสผ่าน</Form.Label>\r\n          <Form.Control type=\"text\" required></Form.Control>\r\n          <br />\r\n          <ButtonToolbar>\r\n            <Button\r\n              onClick={()=>this.props.history.push(\"/\")}\r\n              size=\"lg\"\r\n              className=\"bt-verify mx-auto d-block\"\r\n              variant=\"secondary\"\r\n            >\r\n              ยกเลิก\r\n            </Button>\r\n            <Button\r\n              // onClick={()=>setModalShow(true)}\r\n              onClick={()=>this.setState({ modalShow: true})}\r\n              size=\"lg\"\r\n              className=\"bt-verify mx-auto d-block\"\r\n            >\r\n              ยืนยัน\r\n            </Button>\r\n          </ButtonToolbar>\r\n        </Form>\r\n      </Col>\r\n      <Col></Col>\r\n      {/* <Popup show={modalShow} onHide={() => setModalShow(false)} /> */}\r\n      <Popup show={this.state.modalShow} onHide={()=>this.setState({ modalShow: false})} />\r\n      <br />\r\n      <br />\r\n      \r\n    </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}