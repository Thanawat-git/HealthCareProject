{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Newli\\\\Desktop\\\\HealthCareProject\\\\health-care-application\\\\src\\\\components\\\\reset-password\\\\reset-password.js\";\nimport React, { Component } from \"react\";\nimport \"../verify-identity/verify-identity.css\";\nimport \"../validation/validation\";\nimport { Container, Form, Button, Col, FormControl, ButtonToolbar } from \"react-bootstrap\";\nimport Popup from \"../popup/popup\"; // const validationRules = {\n//   required: val => val !== null && val !== undefined && val !== \"\",\n//   passNew: passNew => {\n//     const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n//     return re.test(String(passNew));\n//   },\n//   passCheck: passCheck => {\n//     const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n//     return re.test(String(passCheck));\n//     //const re = /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/;\n//     //return re.test(String(email).toLowerCase());\n//   }\n// };\n\nconst formValid = formErrors => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  return valid;\n};\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkPasswordMatch = () => {\n      const password = $(\"#txtNewPassword\").val();\n      const confirmPassword = $(\"#txtConfirmPassword\").val();\n      if (password != confirmPassword) $(\"#divCheckPasswordMatch\").html(\"Passwords do not match!\");else $(\"#divCheckPasswordMatch\").html(\"Passwords match.\");\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state.formErrors)) {\n        console.log(`\n      --Submitting--\n      oldpass: ${this.state.oldpass}\n      newpass: ${this.state.newpass}`);\n      } else {\n        console.error(\"Error\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case \"oldpass\":\n          formErrors.oldpass = value.length > 7 && value.length < 25 ? \"\" : \"กรุณากรอกรหัสผ่าน 8-25 หลัก\";\n          break;\n\n        case \"newpass\":\n          formErrors.newpass = value.length > 7 && value.length < 25 ? \"\" : \"กรุณากรอกรหัสผ่านให้ตรงกัน\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state.formErrors));\n    };\n\n    this.state = {\n      oldpass: null,\n      newpass: null,\n      formErrors: {\n        oldpass: \"\",\n        //กรุณากรอกเลขบัตรประชาชน 13 หลัก\n        newpass: \"\" //กรุณากรอกรหัสผ่าน\n\n      }\n    }; // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // constructor(props) {\n  //   super(props);\n  //   this.formValidationRules = {\n  //     passNew: [\n  //       { rule: validationRules.passNew, message: \"Pass number is invalid\" }\n  //     ],\n  //     passCheck: [\n  //       { rule: validationRules.required, message: \"passCheck is required\" },\n  //       { rule: validationRules.passCheck, message: \"passCheck is invalid\" }\n  //     ],\n  //     password_has_error: [false]\n  //   };\n  //   this.fields = [\"passNew\", \"passCheck\"];\n  //   this.state = {\n  //     signupForm: { isValid: false },\n  //     passNew: { value: \"\", isTouched: false, isValid: false, errors: [] },\n  //     passCheck: { value: \"\", isTouched: false, isValid: false, errors: [] }\n  //   };\n  // }\n  // handleFieldChange = e => {\n  //   let newState = { ...this.state };\n  //   newState[e.target.name].value = e.target.value;\n  //   this.validateForm(newState);\n  // };\n  // handleSetTouched = e => {\n  //   let field = { ...this.state[e.target.name], isTouched: true };\n  //   this.setState({ [e.target.name]: { ...field } });\n  // };\n  // getClassName = fieldName => {\n  //   const field = this.state[fieldName];\n  //   return field.isTouched && !field.isValid ? \"has-error\" : \"\";\n  // };\n  // validateForm = newState => {\n  //   newState = newState || { ...this.state };\n  //   this.fields.forEach(fieldName => {\n  //     let newField = newState[fieldName];\n  //     newField.errors = [];\n  //     newField.isValid = true;\n  //     this.formValidationRules[fieldName].forEach(vRule => {\n  //       if (!vRule.rule(this.state[fieldName].value)) {\n  //         newField.errors.push(vRule.message);\n  //         newField.isValid = false;\n  //       }\n  //       newState[fieldName] = newField;\n  //     });\n  //   });\n  //   this.setState(newState);\n  // };\n  // componentWillMount() {\n  //   this.validateForm();\n  // }\n  render() {\n    // const { passNew, passCheck } = this.state;\n    return (\n      /*#__PURE__*/\n      // <Container>\n      //   <br />\n      //   <br />\n      //   <br />\n      //   <br />\n      //   <br />\n      //   <Col></Col>\n      //   <Col>\n      //     <h1 className=\"titel\">ตั้งค่ารหัสผ่านใหม่</h1>\n      //     <Form>\n      //       <Form.Label >รหัสผ่านใหม่</Form.Label>\n      //       <FormControl\n      //         className={passNew.isTouched && !passNew.isValid ? \"has-error\" : \"\"}\n      //         type=\"text\"\n      //         name=\"passNew\"\n      //         value={this.state.passNew.value}\n      //         onChange={this.handleFieldChange}\n      //         onBlur={this.handleSetTouched}\n      //       ></FormControl>\n      //       {passNew.isTouched &&\n      //         passNew.errors.length > 0 &&\n      //         passNew.errors.map((err, i) => (\n      //           <span key={i} className=\"error-message\">\n      //             {err}\n      //           </span>\n      //         ))}\n      //       <br />\n      //       <Form.Label>ยืนยันรหัสผ่าน</Form.Label>\n      //       <Form.Control className={passCheck.isTouched && !passCheck.isValid ? \"has-error\" : \"\"}\n      //         type=\"password\"\n      //         name=\"passCheck\"\n      //         value={this.state.passCheck.value}\n      //         checked={this.state.passCheck.checkPassword}\n      //         onChange={this.handleFieldChange}\n      //         onBlur={this.handleSetTouched}\n      //       ></Form.Control>\n      //       {passCheck.isTouched &&\n      //         passCheck.errors.length > 0 &&\n      //         passCheck.errors.map((err, i) => (\n      //           <span key={i} className=\"error-message\">\n      //             {err}\n      //           </span>\n      //         ))}\n      //       <br />\n      //       <ButtonToolbar>\n      //         <Button\n      //           onClick={() => this.props.history.push(\"/login\")}\n      //           size=\"lg\"\n      //           className=\"bt-verify mx-auto d-block\"\n      //           variant=\"secondary\"\n      //         >\n      //           ยกเลิก\n      //         </Button>\n      //         <Button size=\"lg\" className=\"bt-verify mx-auto d-block\"\n      //         >\n      //           ยืนยัน\n      //         </Button>\n      //       </ButtonToolbar>\n      //     </Form>\n      //   </Col>\n      //   <Col></Col>\n      // </Container>\n      React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"titel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      }, \"\\u0E15\\u0E31\\u0E49\\u0E07\\u0E04\\u0E48\\u0E32\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\\u0E43\\u0E2B\\u0E21\\u0E48\"), /*#__PURE__*/React.createElement(Form, {\n        className: \"form-verify mx-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\\u0E43\\u0E2B\\u0E21\\u0E48\"), /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        minLength: \"13\",\n        maxLength: \"13\",\n        name: \"oldpass\",\n        id: \"txtNewPassword\" // onChange={this.handleChange}\n        ,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"errorMessage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, this.state.formErrors.oldpass), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        minLength: \"8\",\n        maxLength: \"25\",\n        name: \"newpass\",\n        id: \"txtConfirmPassword\",\n        required: true,\n        onChange: this.checkPasswordMatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"errorMessage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, this.state.formErrors.newpass), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"registrationFormAlert\",\n        id: \"divCheckPasswordMatch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.props.history.push(\"/\"),\n        size: \"lg\",\n        className: \"bt-verify mx-auto d-block\",\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }\n      }, \"\\u0E22\\u0E01\\u0E40\\u0E25\\u0E34\\u0E01\"), /*#__PURE__*/React.createElement(Button // onClick={()=>setModalShow(true)}\n      , {\n        onClick: () => this.setState({\n          modalShow: true\n        }),\n        size: \"lg\",\n        className: \"bt-verify mx-auto d-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\")))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Popup, {\n        show: this.state.modalShow,\n        onHide: () => this.setState({\n          modalShow: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }\n      }))\n    );\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/Newli/Desktop/HealthCareProject/health-care-application/src/components/reset-password/reset-password.js"],"names":["React","Component","Container","Form","Button","Col","FormControl","ButtonToolbar","Popup","formValid","formErrors","valid","Object","values","forEach","val","length","ResetPassword","constructor","props","checkPasswordMatch","password","$","confirmPassword","html","handleSubmit","e","preventDefault","state","console","log","oldpass","newpass","error","handleChange","name","value","target","setState","render","history","push","modalShow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../verify-identity/verify-identity.css\";\r\nimport \"../validation/validation\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  FormControl,\r\n  ButtonToolbar,\r\n} from \"react-bootstrap\";\r\nimport Popup from \"../popup/popup\";\r\n\r\n// const validationRules = {\r\n//   required: val => val !== null && val !== undefined && val !== \"\",\r\n//   passNew: passNew => {\r\n//     const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\r\n//     return re.test(String(passNew));\r\n//   },\r\n//   passCheck: passCheck => {\r\n//     const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\r\n//     return re.test(String(passCheck));\r\n//     //const re = /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/;\r\n//     //return re.test(String(email).toLowerCase());\r\n//   }\r\n// };\r\n\r\nconst formValid = (formErrors) => {\r\n  let valid = true;\r\n  Object.values(formErrors).forEach((val) => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n  return valid;\r\n};\r\n\r\n\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      oldpass: null,\r\n      newpass: null,\r\n      formErrors: {\r\n        oldpass: \"\", //กรุณากรอกเลขบัตรประชาชน 13 หลัก\r\n        newpass: \"\", //กรุณากรอกรหัสผ่าน\r\n      },\r\n    };\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  checkPasswordMatch = () => {\r\n    const password = $(\"#txtNewPassword\").val();\r\n    const confirmPassword = $(\"#txtConfirmPassword\").val();\r\n\r\n    if (password != confirmPassword)\r\n        $(\"#divCheckPasswordMatch\").html(\"Passwords do not match!\");\r\n    else\r\n        $(\"#divCheckPasswordMatch\").html(\"Passwords match.\");\r\n}\r\n\r\n// $(document).ready(function () {\r\n//   $(\"#txtConfirmPassword\").keyup(checkPasswordMatch);\r\n// });\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (formValid(this.state.formErrors)) {\r\n      console.log(`\r\n      --Submitting--\r\n      oldpass: ${this.state.oldpass}\r\n      newpass: ${this.state.newpass}`);\r\n    } else {\r\n      console.error(\"Error\");\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    switch (name) {\r\n      case \"oldpass\":\r\n        formErrors.oldpass =\r\n          value.length > 7 && value.length < 25\r\n          ? \"\" \r\n          : \"กรุณากรอกรหัสผ่าน 8-25 หลัก\";\r\n        break;\r\n      case \"newpass\":\r\n        formErrors.newpass = \r\n          value.length > 7 && value.length < 25\r\n            ? \"\"\r\n            : \"กรุณากรอกรหัสผ่านให้ตรงกัน\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ formErrors, [name]: value }, () =>\r\n      console.log(this.state.formErrors)\r\n    );\r\n  };\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   this.formValidationRules = {\r\n  //     passNew: [\r\n  //       { rule: validationRules.passNew, message: \"Pass number is invalid\" }\r\n  //     ],\r\n  //     passCheck: [\r\n  //       { rule: validationRules.required, message: \"passCheck is required\" },\r\n  //       { rule: validationRules.passCheck, message: \"passCheck is invalid\" }\r\n  //     ],\r\n  //     password_has_error: [false]\r\n  //   };\r\n\r\n  //   this.fields = [\"passNew\", \"passCheck\"];\r\n\r\n  //   this.state = {\r\n  //     signupForm: { isValid: false },\r\n  //     passNew: { value: \"\", isTouched: false, isValid: false, errors: [] },\r\n  //     passCheck: { value: \"\", isTouched: false, isValid: false, errors: [] }\r\n  //   };\r\n  // }\r\n\r\n  // handleFieldChange = e => {\r\n  //   let newState = { ...this.state };\r\n  //   newState[e.target.name].value = e.target.value;\r\n  //   this.validateForm(newState);\r\n  // };\r\n\r\n  // handleSetTouched = e => {\r\n  //   let field = { ...this.state[e.target.name], isTouched: true };\r\n  //   this.setState({ [e.target.name]: { ...field } });\r\n  // };\r\n\r\n  // getClassName = fieldName => {\r\n  //   const field = this.state[fieldName];\r\n  //   return field.isTouched && !field.isValid ? \"has-error\" : \"\";\r\n  // };\r\n\r\n  // validateForm = newState => {\r\n  //   newState = newState || { ...this.state };\r\n  //   this.fields.forEach(fieldName => {\r\n  //     let newField = newState[fieldName];\r\n  //     newField.errors = [];\r\n  //     newField.isValid = true;\r\n  //     this.formValidationRules[fieldName].forEach(vRule => {\r\n  //       if (!vRule.rule(this.state[fieldName].value)) {\r\n  //         newField.errors.push(vRule.message);\r\n  //         newField.isValid = false;\r\n  //       }\r\n  //       newState[fieldName] = newField;\r\n  //     });\r\n  //   });\r\n  //   this.setState(newState);\r\n  // };\r\n\r\n  // componentWillMount() {\r\n  //   this.validateForm();\r\n  // }\r\n  render() {\r\n    // const { passNew, passCheck } = this.state;\r\n    return (\r\n      // <Container>\r\n      //   <br />\r\n      //   <br />\r\n      //   <br />\r\n      //   <br />\r\n      //   <br />\r\n      //   <Col></Col>\r\n      //   <Col>\r\n      //     <h1 className=\"titel\">ตั้งค่ารหัสผ่านใหม่</h1>\r\n\r\n      //     <Form>\r\n      //       <Form.Label >รหัสผ่านใหม่</Form.Label>\r\n      //       <FormControl\r\n      //         className={passNew.isTouched && !passNew.isValid ? \"has-error\" : \"\"}\r\n      //         type=\"text\"\r\n      //         name=\"passNew\"\r\n      //         value={this.state.passNew.value}\r\n      //         onChange={this.handleFieldChange}\r\n      //         onBlur={this.handleSetTouched}\r\n      //       ></FormControl>\r\n      //       {passNew.isTouched &&\r\n      //         passNew.errors.length > 0 &&\r\n      //         passNew.errors.map((err, i) => (\r\n      //           <span key={i} className=\"error-message\">\r\n      //             {err}\r\n      //           </span>\r\n      //         ))}\r\n\r\n      //       <br />\r\n      //       <Form.Label>ยืนยันรหัสผ่าน</Form.Label>\r\n      //       <Form.Control className={passCheck.isTouched && !passCheck.isValid ? \"has-error\" : \"\"}\r\n      //         type=\"password\"\r\n      //         name=\"passCheck\"\r\n      //         value={this.state.passCheck.value}\r\n      //         checked={this.state.passCheck.checkPassword}\r\n      //         onChange={this.handleFieldChange}\r\n      //         onBlur={this.handleSetTouched}\r\n      //       ></Form.Control>\r\n      //       {passCheck.isTouched &&\r\n      //         passCheck.errors.length > 0 &&\r\n      //         passCheck.errors.map((err, i) => (\r\n      //           <span key={i} className=\"error-message\">\r\n      //             {err}\r\n      //           </span>\r\n      //         ))}\r\n      //       <br />\r\n      //       <ButtonToolbar>\r\n      //         <Button\r\n      //           onClick={() => this.props.history.push(\"/login\")}\r\n      //           size=\"lg\"\r\n      //           className=\"bt-verify mx-auto d-block\"\r\n      //           variant=\"secondary\"\r\n      //         >\r\n      //           ยกเลิก\r\n      //         </Button>\r\n      //         <Button size=\"lg\" className=\"bt-verify mx-auto d-block\"\r\n\r\n      //         >\r\n      //           ยืนยัน\r\n      //         </Button>\r\n      //       </ButtonToolbar>\r\n      //     </Form>\r\n      //   </Col>\r\n      //   <Col></Col>\r\n      // </Container>\r\n\r\n      <Container>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Col></Col>\r\n        <Col>\r\n          <h1 className=\"titel\">ตั้งค่ารหัสผ่านใหม่</h1>\r\n          <Form className=\"form-verify mx-auto\">\r\n            <Form.Label>รหัสผ่านใหม่</Form.Label>\r\n            <FormControl\r\n              type=\"text\"\r\n              minLength=\"13\"\r\n              maxLength=\"13\"\r\n              name=\"oldpass\"\r\n              id=\"txtNewPassword\"\r\n              // onChange={this.handleChange}\r\n              required\r\n            ></FormControl>\r\n            <Form.Label className=\"errorMessage\">{this.state.formErrors.oldpass}</Form.Label>\r\n            <br />\r\n            <Form.Label>ยืนยันรหัสผ่าน</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              minLength=\"8\"\r\n              maxLength=\"25\"\r\n              name=\"newpass\"\r\n              id=\"txtConfirmPassword\"\r\n              required\r\n              onChange={this.checkPasswordMatch}\r\n            ></Form.Control>\r\n            <Form.Label className=\"errorMessage\">{this.state.formErrors.newpass}</Form.Label>\r\n            <div class=\"registrationFormAlert\" id=\"divCheckPasswordMatch\"></div>\r\n            <br />\r\n            <ButtonToolbar>\r\n              <Button\r\n                onClick={() => this.props.history.push(\"/\")}\r\n                size=\"lg\"\r\n                className=\"bt-verify mx-auto d-block\"\r\n                variant=\"secondary\"\r\n              >\r\n                ยกเลิก\r\n              </Button>\r\n              <Button\r\n                // onClick={()=>setModalShow(true)}\r\n                onClick={() => this.setState({ modalShow: true })}\r\n                size=\"lg\"\r\n                className=\"bt-verify mx-auto d-block\"\r\n              >\r\n                ยืนยัน\r\n              </Button>\r\n            </ButtonToolbar>\r\n          </Form>\r\n        </Col>\r\n        <Col></Col>\r\n        {/* <Popup show={modalShow} onHide={() => setModalShow(false)} /> */}\r\n        <Popup\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        />\r\n        <br />\r\n        <br />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}